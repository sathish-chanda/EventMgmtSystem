package RemoteInterface;


/**
* RemoteInterface/remotePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from G:/ASG2/src/remote.idl
* Friday, August 2, 2019 3:19:13 PM EDT
*/

public abstract class remotePOA extends org.omg.PortableServer.Servant
 implements RemoteInterface.remoteOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("viewEvents", new java.lang.Integer (0));
    _methods.put ("viewEvents2", new java.lang.Integer (1));
    _methods.put ("registerEmployee", new java.lang.Integer (2));
    _methods.put ("checkUser", new java.lang.Integer (3));
    _methods.put ("addEvent", new java.lang.Integer (4));
    _methods.put ("deleteEvent", new java.lang.Integer (5));
    _methods.put ("bookEvents", new java.lang.Integer (6));
    _methods.put ("viewBookedEvents", new java.lang.Integer (7));
    _methods.put ("viewBookedEvents2", new java.lang.Integer (8));
    _methods.put ("cancelEvents", new java.lang.Integer (9));
    _methods.put ("swapEvent", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // RemoteInterface/remote/viewEvents
       {
         String eventType = in.read_string ();
         String $result = null;
         $result = this.viewEvents (eventType);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // RemoteInterface/remote/viewEvents2
       {
         String eventType = in.read_string ();
         String $result = null;
         $result = this.viewEvents2 (eventType);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // RemoteInterface/remote/registerEmployee
       {
         String userId = in.read_string ();
         this.registerEmployee (userId);
         out = $rh.createReply();
         break;
       }

       case 3:  // RemoteInterface/remote/checkUser
       {
         String userId = in.read_string ();
         String $result = null;
         $result = this.checkUser (userId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // RemoteInterface/remote/addEvent
       {
         String eventype = in.read_string ();
         String eventid = in.read_string ();
         int bookingcapacity = in.read_long ();
         String $result = null;
         $result = this.addEvent (eventype, eventid, bookingcapacity);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // RemoteInterface/remote/deleteEvent
       {
         String eventype = in.read_string ();
         String eventid = in.read_string ();
         String $result = null;
         $result = this.deleteEvent (eventype, eventid);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // RemoteInterface/remote/bookEvents
       {
         String CustomerId = in.read_string ();
         String eventtype = in.read_string ();
         String eventId = in.read_string ();
         String $result = null;
         $result = this.bookEvents (CustomerId, eventtype, eventId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 7:  // RemoteInterface/remote/viewBookedEvents
       {
         String CustomerId = in.read_string ();
         String $result = null;
         $result = this.viewBookedEvents (CustomerId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // RemoteInterface/remote/viewBookedEvents2
       {
         String CustomerId = in.read_string ();
         String $result = null;
         $result = this.viewBookedEvents2 (CustomerId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 9:  // RemoteInterface/remote/cancelEvents
       {
         String CustomerId = in.read_string ();
         String eventtype = in.read_string ();
         String eventId = in.read_string ();
         String $result = null;
         $result = this.cancelEvents (CustomerId, eventtype, eventId);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 10:  // RemoteInterface/remote/swapEvent
       {
         String customerID = in.read_string ();
         String newEventID = in.read_string ();
         String newEventType = in.read_string ();
         String oldEventID = in.read_string ();
         String oldEventType = in.read_string ();
         String $result = null;
         $result = this.swapEvent (customerID, newEventID, newEventType, oldEventID, oldEventType);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RemoteInterface/remote:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public remote _this() 
  {
    return remoteHelper.narrow(
    super._this_object());
  }

  public remote _this(org.omg.CORBA.ORB orb) 
  {
    return remoteHelper.narrow(
    super._this_object(orb));
  }


} // class remotePOA
